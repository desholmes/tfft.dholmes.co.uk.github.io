{"version":3,"sources":["modules/tfftCountdown.js","main.js"],"names":["TfftCountdown","configProps","containerId","targetDate","containerEl","document","getElementById","Error","Date","year","month","date","getTime","days","querySelector","daysDigit","hours","hoursDigit","minutes","minutesDigit","seconds","secondsDigit","today","diff","Math","floor","dayBg","hourBg","minutesBg","secondsBg","classList","remove","add","innerHTML","setInterval","window","config","terminal"],"mappings":"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","file":"main.16dfd9f4.js","sourceRoot":"../src","sourcesContent":["class TfftCountdown {\n  #id = \"tfft-countdown\";\n  #dom = {};\n  #containerEl;\n  #targetDate;\n\n  constructor(configProps = {}) {\n    const { containerId = \"tfft-countdown\", targetDate } = configProps;\n\n    const containerEl = document.getElementById(containerId);\n\n    if (!containerEl) {\n      throw Error(`Container #${containerId} does not exist!`);\n    }\n\n    this.#containerEl = containerEl;\n    this.#targetDate = new Date(\n      targetDate.year,\n      targetDate.month,\n      targetDate.date\n    ).getTime();\n\n    this.#setUp();\n  }\n\n  #setUp() {\n    this.#createDom();\n    this.#setTimer();\n    this.#updateClock();\n  }\n\n  #createDom() {\n    this.#dom = {\n      days: this.#containerEl.querySelector(\".days\"),\n      daysDigit: this.#containerEl.querySelector(\".days .digit\"),\n      hours: this.#containerEl.querySelector(\".hours\"),\n      hoursDigit: this.#containerEl.querySelector(\".hours .digit\"),\n      minutes: this.#containerEl.querySelector(\".minutes\"),\n      minutesDigit: this.#containerEl.querySelector(\".minutes .digit\"),\n      seconds: this.#containerEl.querySelector(\".seconds\"),\n      secondsDigit: this.#containerEl.querySelector(\".seconds .digit\"),\n    };\n  }\n\n  #updateClock() {\n    const today = new Date().getTime();\n    const diff = this.#targetDate - today;\n\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n    const dayBg = `bg-${Math.floor((days / 30) * 100)}`;\n    const hourBg = `bg-${Math.floor((hours / 24) * 100)}`;\n    const minutesBg = `bg-${Math.floor((minutes / 60) * 100)}`;\n    const secondsBg = `bg-${Math.floor((seconds / 60) * 100)}`;\n\n    // Update days\n    this.#dom.days.classList.remove(this.#dom.minutes.classList[2]);\n    this.#dom.days.classList.add(dayBg);\n    this.#dom.daysDigit.innerHTML = days;\n    // Update hours\n    this.#dom.hours.classList.remove(this.#dom.minutes.classList[2]);\n    this.#dom.hours.classList.add(hourBg);\n    this.#dom.hoursDigit.innerHTML = hours;\n    // Update minutes\n    this.#dom.minutes.classList.remove(this.#dom.minutes.classList[2]);\n    this.#dom.minutes.classList.add(minutesBg);\n    this.#dom.minutesDigit.innerHTML = minutes;\n    // Update seconds\n    this.#dom.seconds.classList.remove(this.#dom.seconds.classList[2]);\n    this.#dom.seconds.classList.add(secondsBg);\n    this.#dom.secondsDigit.innerHTML = seconds;\n  }\n\n  #setTimer() {\n    const timer = setInterval(() => {\n      this.#updateClock();\n    }, 1000);\n  }\n}\n\nif (window) {\n  window.TfftCountdown = TfftCountdown;\n}\n\nexport default TfftCountdown;\n","import TfftCountdown from \"./modules/tfftCountdown\";\nimport \"./scss/main.scss\";\n\nconst config = {\n  containerId: \"tfft-countdown\",\n  targetDate: { date: 30, month: 0, year: 2021 },\n};\n\nconst terminal = new TfftCountdown(config);\n"]}